#!/usr/bin/env php
<?php

$opt = getopt('vpe:');
function usage() {
    $me = basename($_SERVER['PHP_SELF']);
    echo "Usage: {$me} -v(var_dump) -p(print_r) -e <json>\n" .
         "       -or-\n" .
         "       echo [1,2,3] | {$me} -v(var_dump) -p(print_r)\n";
}

if (!function_exists('json_decode')) {
    fwrite(STDERR, "The 'json_decode' function is not defined. " .
        "Try installing PECL json or using PHP 5.2 or higher.\n");
    exit(1);
} else if (isset($opt['e'])) {
    $json = json_decode($opt['e'], true);
} else if (posix_isatty(STDIN) && isset($_SERVER['argv'][1])) {
    $json = json_decode($_SERVER['argv'][1], true);
} else if (!posix_isatty(STDIN)) {
    $json = json_decode(file_get_contents('php://stdin'), true);
} else {
    usage();
    exit(1);
}

if (!function_exists('json_last_error_msg')) {
    function json_last_error_msg() {
        $err = json_last_error();
        $consts = get_defined_constants(true);
        foreach ($consts['json'] as $const => $val) {
            if (substr($const, 0, 11) == 'JSON_ERROR_' && $err == $val) {
                return $const;
            }
        }
        return 'JSON_ERROR_UNKNOWN';
    }
}

if (JSON_ERROR_NONE !== json_last_error()) {
    fwrite(STDERR, json_last_error_msg() . "\n");
    exit(1);
}

isset($opt['v']) ? var_dump($json) : print_r($json);

#!/usr/bin/env php
<?php

// Define opts and usage
$opt = getopt('hvpje:x:');
function usage() {
    $me = basename($_SERVER['PHP_SELF']);
    echo "Usage: {$me} -v(var_dump) -p(print_r) -e <json>\n" .
         "       -or-\n" .
         "       echo [1,2,3] | {$me} -v(var_dump) -p(print_r)\n";
}

// Stub posix_isatty if missing
if (!function_exists('posix_isatty')) {
    function posix_isatty($ig) {
        return false;
    }
}

// Check opts
if (!function_exists('json_decode')) {
    fwrite(STDERR, "The 'json_decode' function is not defined. " .
        "Try installing PECL json or using PHP 5.2 or higher.\n");
    exit(1);
} else if (isset($opt['h'])) {
    usage();
    exit(0);
} else if (isset($opt['e'])) {
    $json = json_decode($opt['e'], true);
} else if (posix_isatty(STDIN) && isset($_SERVER['argv'][1])) {
    $json = json_decode($_SERVER['argv'][1], true);
} else if (!posix_isatty(STDIN)) {
    $json = json_decode(file_get_contents('php://stdin'), true);
} else {
    usage();
    exit(1);
}

// Define json_last_error_msg if missing
if (!function_exists('json_last_error_msg')) {
    function json_last_error_msg() {
        $err = json_last_error();
        $consts = get_defined_constants(true);
        foreach ($consts['json'] as $const => $val) {
            if (substr($const, 0, 11) == 'JSON_ERROR_' && $err == $val) {
                return $const;
            }
        }
        return 'JSON_ERROR_UNKNOWN';
    }
}

// Check decode error
if (JSON_ERROR_NONE !== json_last_error()) {
    fwrite(STDERR, json_last_error_msg() . "\n");
    exit(1);
}

// Extract path if specified
$exit_code = 0;
if (isset($opt['x'])) {
    $paths = array_filter(explode('.', $opt['x']), function($x) {
        return trim($x) != '';
    });
    $cur = $json;
    while (($path = array_shift($paths)) !== null) {
        if (array_key_exists($path, $cur)) {
            $cur = $cur[$path];
        } else {
            $cur = null;
            $exit_code = 1;
            break;
        }
    }
    $json = $cur;
}

// Print result
if (isset($opt['j'])) {
    echo json_encode($json, defined('JSON_PRETTY_PRINT') ? JSON_PRETTY_PRINT : 0);
} else if (isset($opt['p'])) {
    print_r($json);
} else { // if (isset($opt['v'])) {
    var_dump($json);
}

// Exit
exit($exit_code);
